#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 [DEVICES...]
#h:
#h: -l            : List removable storage devices.
#h: -i            : Install file system formating tools.
#h: -f zero       : Zero the device.
#h: -f udf|ext3   : Format using UDF.
#h: -f f2fs       : Format using F2FS file system. (Requires mkfs.f2fs from f2fs-tools)
#h: -f ntfs|fat32 : Format using NTFS. (Remember to put type 7 with cfdisk)
#h: -n NAME       : Name for the partition.
#h: -F            : Run fast formatting. (No zeroing and bad block checks)
##:
. hlog
. hterm
. hpkg
. vrun
. hrand
hformat() {
    ## Parse command line arguments.
    local OPTIND optopt= ops= formats="" f= name=
    while getopts "ilf:n:F" optopt;do # OPTARG
        case $optopt in
            i)  hformat_install_software ;;
            l)  hformat_list_drives      ;;
	    F)  HFORMAT_FAST=1           ;;
            n)  local name="${OPTARG}"   ;;
            f)  local formats="${formats} ${OPTARG}";;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    for device in "$@"; do
        if test ! -e "${device}"; then
            hlog error "File '${device}' does not exist."
            return 1
        fi
        if ! hterm stop "All data in $device will be removed.";then
            return 1
        fi
        for f in ${formats};do
            hformat_format_"${f}" "${device}" "${name:-`hrand random 8`}"
        done
    done
}
hformat_calc_variables() {
    HFORMAT_FAST=
}
## --------------------------------------------------------------------------------
hformat_install_software() {
    if ! hpkg -w "mkudffs" -i %dpkg "udftools" %rpm "udftools";then
        hlog error "Do not know how to install 'udftools' in this machine."
    fi
    if ! hpkg -w "mkntfs" -i %pacman extra/ntfs-3g;then
        hlog error "Do not know how to install 'mkntfs' in this machine."
    fi
}
hformat_list_drives() {
    ls -lh /dev/disk/by-id/ | sed 's|../../|/dev/|g' | sed '\|/dev/nvme|d'
}
hformat_format_zero() { # DRIVE
    local device="${1}"
    test -e "$device" || hlog fatal "File '$device' does not exist."
    vrun sudo dd if="/dev/zero" of="${device}" bs=1M
    vrun sync
}
hformat_format_udf() { # DRIVE [NAME]
    local device="${1}" name="${2:-`hrand random 8`}"
    test -e "$device" \
        || hlog fatal "File '$device' does not exist."
    test -n "`echo "$1" | grep -e '/dev/sd[abcd]$' -e '/dev/.*[0-9]$'`" \
        || hlog fatal "You can only format with UDF entire disks."
    vrun sudo dd if="/dev/zero" of='${device}' bs=1M count=1
    vrun sudo mkudffs --utf8                          \
          --media-type=hd --blocksize=512             \
          --lvid="$name" --vid="$name" --fsid="$name" \
          --udfrev=0x0102 "$device"
    vrun sync
}
hformat_format_ext3() { # DRIVE [NAME]
    local device="${1}" name="${2:-`hrand random 8`}"
    test -e "${device}" || hlog fatal "File '${device}' does not exist."
    vrun sudo mke2fs -t "ext3" -L "${name}" -M "/mnt/${name}" "${device}"
    vrun sync
}
hformat_format_ntfs() { # DRIVE [NAME]
    local device="${1}" name="${2:-`hrand random 8`}"
    test -e "${device}" || hlog fatal "File '${device}' does not exist."
    vrun sudo mkntfs -f -L "${name}" "${device}"
    vrun sync
}
hformat_format_fat32() { # DRIVE [NAME]
    local device="${1}" name="${2:-`hrand random 8`}"
    test -e "${device}" || hlog fatal "File '${device}' does not exist."
    local name="`echo "${name}" | tr '[:lower:]' '[:upper:]'`"
    vrun sudo mkfs.fat -F 32 -n "${name}" "${device}"
    vrun sync
}
hformat_format_f2fs() { # DRIVE [NAME]
    local device="${1}" name="${2:-`hrand random 8`}"
    test -e "${device}" || hlog fatal "File '${device}' does not exist."
    local name="`echo "${name}" | tr '[:lower:]' '[:upper:]'`"
    vrun sudo mkfs.f2fs -f -l "${name}" "${device}"
    vrun sync
}




## --------------------------------------------------------------------------------
hformat_calc_variables
if test @"`basename "$0"`" = @"hformat";then
    if test -n "$1";then
        hformat "$@"
    else
        sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|`basename $0`|g"
        echo ""
        sed -n 's/^ *#l: \{0,2\}//p' "$0"
    fi
fi






